1: What is Infrastructure as Code (IaC) in Terraform?
A: IaC in Terraform means defining cloud and on-prem resources in human-readable configuration files, enabling predictable, repeatable, 
   and automated infrastructure provisioning.

2: What language is used to write Terraform configurations?
A: Terraform configurations are written in HashiCorp Configuration Language (HCL), which is human-readable and designed for declarative infrastructure management.

3: What are Terraform Providers?
A: Providers are plugins that allow Terraform to manage resources for specific platforms like AWS, Azure, GCP, VMware, etc. 
   They act as a bridge between Terraform and the underlying infrastructure.

4: What is the difference between Terraform plan and apply?
A:terraform plan shows the execution plan of what changes Terraform will make.
  terraform apply executes those planned changes to create or modify infrastructure.

5: What is the command used to initialize Terraform?
A: The command is: terraform init
   It initializes the backend, downloads provider plugins, and prepares the working directory for Terraform commands.

6: What is Terraform state file?
A: The Terraform state file (terraform.tfstate) keeps track of infrastructure resources. 
   It maps configuration files to real-world infrastructure, enabling Terraform to detect changes and apply only necessary updates.

7: What cloud providers are supported by Terraform?
A: Terraform supports major cloud providers like AWS, Azure, Google Cloud, Oracle, and also on-prem providers like VMware, OpenStack, 
   and many SaaS platforms through providers.

8: What is the difference between Terraform and Ansible?
A: Terraform is used for infrastructure provisioning (creating servers, networks, etc.), 
   while Ansible focuses on configuration management and application deployment on already provisioned systems.
